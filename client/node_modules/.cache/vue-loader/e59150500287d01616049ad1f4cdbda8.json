{"remainingRequest":"C:\\Users\\konch\\synergy\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\konch\\synergy\\client\\src\\components\\MapComp.vue?vue&type=style&index=0&id=4916af0b&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\konch\\synergy\\client\\src\\components\\MapComp.vue","mtime":1616777046923},{"path":"C:\\Users\\konch\\synergy\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\konch\\synergy\\client\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\konch\\synergy\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\konch\\synergy\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\konch\\synergy\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICNtYXBDb250YWluZXIgeyAgIHdpZHRoOiA4MHZ3Ow0KIGhlaWdodDogMTAwdmg7IH0NCiAgIGgyIHsNCiAgICBmb250LXNpemU6IDQwcHg7DQogICAgY29sb3I6IG1lZGl1bXNlYWdyZWVuOw0KICB9DQoNCg0K"},{"version":3,"sources":["C:\\Users\\konch\\synergy\\client\\src\\components\\MapComp.vue"],"names":[],"mappings":";EAyME,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;GACb,CAAC,EAAE;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB","file":"C:/Users/konch/synergy/client/src/components/MapComp.vue","sourceRoot":"","sourcesContent":["<template>\r\n<div id=\"MapComp\"> \r\n \t\t<form class=\"search\" @submit.prevent=\"submit\">\r\n\t\t\t<fieldset>\r\n      \t\t<legend>Search for Facilities</legend>\r\n      \t<div class=\"city\" align=\"center\">\r\n\t\t\t<input list=\"cities\" v-model=\"city_q\" placeholder=\"Choose a city\"/> \t\r\n\t\t\t<datalist id=\"cities\" >\r\n\t\t\t<option  v-for=\"c in cities\" :value=\"c.city\" v-bind:key=\"c.id\">\r\n\t\t\t\t{{ c.city }}\r\n\t\t\t\t</option>\r\n\t\t\t</datalist></div>\r\n\t\t<div class=\"category\">\r\n\t\t\t<input list=\"categories\" v-model=\"category_q\" placeholder=\"Choose a category\"/>\r\n  \t\t\t\t<datalist id=\"categories\" >\r\n\t\t\t\t<option  v-for=\"cat in categories\" :value=\"cat.facCatName\" v-bind:key=\"cat.idFacCat\">\r\n\t\t\t\t{{ cat.facCatName }}\r\n\t\t\t\t</option>\r\n  \t\t\t</datalist></div>\r\n\t\t<div class=\"facility\" style=\"display: inline-block\">\r\n\t\t\t<input list=\"facilities\" v-model=\"facility_q\" placeholder=\"Choose a facility\"/> \r\n\t\t\t<datalist id=\"facilities\" >\r\n\t\t\t<option  v-for=\"fac in facilities\" :value=\"fac.facName\" v-bind:key=\"fac.idFac\">\r\n\t\t\t\t{{ fac.facName }}\r\n\t\t\t\t</option>\r\n\t\t\t</datalist></div>\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<div v-on:click=\"getFacilityMessage(f)\" v-for=\"(f, index) in facilities\" v-bind:key=\"f.idfac\">{{ index }} : {{f.facName}} {{f.facAddress}} [{{f.facLat}},{{f.facLong}}]</div>\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t   <div id=\"mapContainer\"></div>\r\n</div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\n\r\n\r\n\r\nexport default {\r\nprops: {\r\n\tlocation\r\n},\r\ndata(){\r\n\r\n\treturn {\r\n\t\tcountry_q:'gr',\r\n\t\tcity_q:'',\r\n\t\tfacility_q:'',\r\n\t\tcategory_q:'',\r\n\t\tcountries:[],\r\n\t\tcities:[],\r\n\t\tcategories:[],\r\n\t\tfacilities:[],\r\n\t\tmapDiv: {},\r\n\t\tmyIcon : {},\r\n\t}\r\n},\r\ncomputed: {\r\n    center: function () {\r\n\t\tif(this.location){\r\n\t\t\treturn [this.location.coords.latitude, this.location.coords.longitude]\r\n\t\t}else if (this.city){\r\n\t\t\treturn [this.city.latitude,this.city.longitude]\r\n\t\t}\r\n\t\telse if (this.facility){\r\n\t\t\treturn [this.facility.facLat,this.facility.faclong]\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn [37.9833333, 23.7333333]\r\n\t\t}\r\n    }\r\n  }\r\n,\r\nmethods:{\r\n\tgetCity(){\r\n\t\tvar url='http://localhost:3000/api/cities/'+this.country_q+'/'+this.city_q;\r\n\t\tconsole.log(url);\r\n\t\t//var params = new URLSearchParams();\r\n\t\t//params.append('miom', JSON.stringify(this.miom));\r\n\t\t//params.append('miom', this.miom);\r\n\t\t//var headers = {'Content-Type': 'application/json; charset=utf-8'};\r\n\t\taxios.get(url).then(res => {this.cities = res.data.response});\r\n\t\tconsole.log(this.cities);\r\n\t},\r\n\tgetCities(){\r\n\t\tvar url='http://localhost:3000/api/cities/'+this.country_q;\r\n\t\tconsole.log(url);\r\n\t\t//var params = new URLSearchParams();\r\n\t\t//params.append('miom', JSON.stringify(this.miom));\r\n\t\t//params.append('miom', this.miom);\r\n\t\t//var headers = {'Content-Type': 'application/json; charset=utf-8'};\r\n\t\taxios.get(url).then(res => {this.cities = res.data.response});\r\n\t\tconsole.log(this.cities);\r\n\t},\r\n\tgetCountries(){\r\n\t\tvar url='http://localhost:3000/api/countries/';\r\n\t\tconsole.log(url);\r\n\t\tvar params = new URLSearchParams();\r\n\t\t//params.append('miom', JSON.stringify(this.miom));\r\n\t\t//params.append('miom', this.miom);\r\n\t\tvar headers = {\r\n\t\t\t'Content-Type': 'application/json; charset=utf-8'\r\n\t\t\t};\r\n\t\taxios.get(url).then(res => {this.countries = res.data.response});\r\n\t\tconsole.log(this.countries);\r\n\t\t\t},\r\n\tgetFacility(){\r\n\t\tvar url='http://localhost:3000/api/facilities/name/'+this.facility_q;\r\n\t\tconsole.log(url);\r\n\t\taxios.get(url).then(res => {this.facilities = res.data.response});\r\n\t},\r\n\tgetCategory(){\r\n\t\tvar url='http://localhost:3000/api/facilities/category/'+this.category_q;\r\n\t\tvar i=0;\r\n\t\tconsole.log(url);\r\n\t\taxios.get(url).then(res => {\r\n\t\t\tthis.categories = res.data.response;\r\n\t\t})\r\n\t},\r\n\tgetCityMessage(city){\r\n\t\tconsole.log(\"==>\"+city.latitude+\" \"+city.longitude);\r\n\t\tthis.AddMarker(city.latitude,city.longitude,city.city);\r\n\t\tthis.city_q=city.city;\r\n\t\t/*this.center=[city.latitude,city.longitude]*/\r\n\t},\r\n\tgetFacilityMessage(facility){\r\n\t\tconsole.log(\"==>\"+facility.facLat+\" \"+facility.facLong);\r\n\t\tthis.AddMarker(facility.facLat,facility.facLong,facility.facName);\r\n\t\t/*this.center=[facility.facLat,facility.facLong]*/\r\n\t},\r\n\r\n\tsetupLeafletMap (){\r\n\t\tthis.mapDiv = L.map(\"mapContainer\").setView(this.center, 13);\r\n\t\t\t \r\n\t\tL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n\t\t\tattribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n\t\t\t}).addTo(this.mapDiv);\r\n\t\t\t \r\n\t\t\tvar LeafIcon = L.Icon.extend({\r\n\t\t\toptions: {\r\n\t\t\t\ticonUrl: require('C:/Users/konch/synergy/client/src/assets/images/marker.png'),\r\n\t\t\t\t//shadowUrl: 'leaf-shadow.png',\r\n\t\t\t\ticonSize:     [30, 30],\r\n\t\t\t\t//shadowSize:   [50, 64],\r\n\t\t\t\ticonAnchor:   [22, 94],\r\n\t\t\t\t//shadowAnchor: [4, 62],\r\n\t\t\t\tpopupAnchor:  [-3, -76]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.myIcon=new LeafIcon();\r\n\t   },\r\n\t   AddMarker(lat,long,description){\r\n\t\tL.marker([lat, long],{icon: this.myIcon}).addTo(this.mapDiv)\r\n\t\t\t.bindPopup(description)\r\n\t\t\t.openPopup();\t\r\n\t   \r\n\t   \r\n\t   },\r\n\t   getDistance(lat1, lon1, lat2, lon2, unit) {\r\n\tif ((lat1 == lat2) && (lon1 == lon2)) {\r\n\t\treturn 0;\r\n\t}\r\n\telse {\r\n\t\tvar radlat1 = Math.PI * lat1/180;\r\n\t\tvar radlat2 = Math.PI * lat2/180;\r\n\t\tvar theta = lon1-lon2;\r\n\t\tvar radtheta = Math.PI * theta/180;\r\n\t\tvar dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n\t\tif (dist > 1) {\r\n\t\t\tdist = 1;\r\n\t\t}\r\n\t\tdist = Math.acos(dist);\r\n\t\tdist = dist * 180/Math.PI;\r\n\t\tdist = dist * 60 * 1.1515;\r\n\t\tif (unit==\"K\") { dist = dist * 1.609344 }\r\n\t\tif (unit==\"N\") { dist = dist * 0.8684 }\r\n\t\treturn dist;\r\n\t}\r\n}\r\n\t},\r\n     mounted() {\r\n        this.getCountries();\r\n\t\tthis.getCities();\r\n\t\tthis.getCategory();\r\n\t\tthis.setupLeafletMap();\r\n\t}\r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n<style scoped >\r\n  #mapContainer {   width: 80vw;\r\n height: 100vh; }\r\n   h2 {\r\n    font-size: 40px;\r\n    color: mediumseagreen;\r\n  }\r\n\r\n\r\n</style>\r\n"]}]}